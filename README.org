# Emacs Package Dependency Analyzer

A tool for analyzing Emacs package dependencies. It can generate both text reports and visual graphs of package dependencies.

## Features

- Analyze Emacs package dependencies
- Generate dependency reports in text or JSON format
- Create visual dependency graphs
- Organize packages by categories
- Display package descriptions
- Distinguish between built-in and third-party packages

## Installation

1. Clone the repository:
```bash
git clone https://github.com/yourusername/emacs-package-dependency.git
cd emacs-package-dependency
```

2. Install dependencies:
```bash
pip install -r requirements.txt
```

## Usage

### Generate Text Format Dependency Report

```bash
python emacs_package_dependency.py text /path/to/emacs/packages
```

Optional arguments:
- `--format`: Output format, supports 'text' or 'json' (default: 'text')
- `--only-main-file`: Whether to analyze only the main file (default: True)

### Generate Dependency Graph

```bash
python emacs_package_dependency.py graph /path/to/emacs/packages
```

Optional arguments:
- `--output-file`: Output filename (default: 'emacs_dependencies')
- `--emacs-version`: Emacs version (default: '30')
- `--show-descriptions`: Whether to show package descriptions (default: False)
- `--only-main-file`: Whether to analyze only the main file (default: True)

## Output Examples

### Text Format

```
ðŸ“Š Detected Package Dependencies:
  - citar: {'emacs', 'parsebib', 'org', 'citeproc'}
  - vertico: {'emacs'}
  - org: {'emacs'}
```

### Dependency Graph

The generated dependency graph shows:
- Package dependency relationships
- Package organization by categories
- Distinction between built-in and third-party packages
- Optional package descriptions

## Configuration

You can configure in `emacs_package_metadata.py`:
- Package descriptions
- Package category structure
- Graph title format

## Notes

- Graphviz is required for generating dependency graphs
- Ensure you have sufficient permissions to read the package directory
- Python 3.6 or higher is recommended 